# Deploy to Azure Kubernetes Service
# Build and push image to DOCKER; Deploy to Azure Kubernetes Service


resources:
- repo: self

trigger:
  branches:
    include:
    - master
    - develop
    - features/*
  paths:   
    exclude:
    - README.md
   

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    variables:
    - group: 'Microservices Pipeline variables-devtest'
    displayName: Build job
    pool:
      vmImage: 'ubuntu-latest'

    steps:      
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: golangapis
        dockerfile: '**/DockerFile'        
        tags: |
          $(tag) 
      
    - task: PublishPipelineArtifact@0
      inputs:
              targetPath: '$(Pipeline.Workspace)'

- stage: DeployToDev
  displayName: Deploy to Dev
  dependsOn: Build
  jobs:
  - deployment: Deploy
    variables:
    - group: 'Microservices Pipeline variables-devtest'
    displayName: Deploying to Development
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@1
            inputs:
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'    
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: default
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection) 
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              manifests: |
                $(System.ArtifactsDirectory)/**/deploydev.yaml 
                $(System.ArtifactsDirectory)/**/goapiLoadbalancer.yaml 
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                961019/golangapis:$(tag)

